<?xml version="1.0"?><jsdoc><class name="DOM" src="i-bem__dom.js"><members><public><methods><method name="buildSelector"><desc>Строит CSS-селектор, соответствующий блоку/элементу и модификатору</desc><params><param name="elem" type="String" optional="yes"><desc>имя элемент</desc></param><param name="modName" type="String" optional="yes"><desc>имя модификатора</desc></param><param name="modVal" type="String" optional="yes"><desc>значение модификатора</desc></param></params><returns type="String"/></method><method name="destruct"><desc>Удаляет блок вместе с его DOM-нодами</desc><params><param name="keepDOM" type="Boolean" optional="yes" default="false"><desc>нужно ли оставлять DOM-ноды блока в документе</desc></param></params></method></methods></public><protected><properties><property name="domElem" type="jQuery"><desc>DOM-элементы блока</desc></property></properties><methods><method name="findBlocksInside"><desc>Находит блоки внутри (включая контекст) текущего блока или его элементов</desc><params><param name="elem" type="String|jQuery" optional="yes"><desc>элемент блока</desc></param><param name="block" type="String|Object"><desc>имя или описание (blockName,modName,modVal) искомого блока</desc></param></params><returns type="BEM[]"/></method><method name="findBlockInside"><desc>Находит первый блок внутри (включая контекст) текущего блока или его элементов</desc><params><param name="elem" type="String|jQuery" optional="yes"><desc>элемент блока</desc></param><param name="block" type="String|Object"><desc>имя или описание (blockName,modName,modVal) искомого блока</desc></param></params><returns type="BEM"/></method><method name="findBlocksOutside"><desc>Находит блоки снаружи (включая контекст) текущего блока или его элементов</desc><params><param name="elem" type="String|jQuery" optional="yes"><desc>элемент блока</desc></param><param name="block" type="String|Object"><desc>имя или описание (blockName,modName,modVal) искомого блока</desc></param></params><returns type="BEM[]"/></method><method name="findBlockOutside"><desc>Находит первый блок снаружи (включая контекст) текущего блока или его элементов</desc><params><param name="elem" type="String|jQuery" optional="yes"><desc>элемент блока</desc></param><param name="block" type="String|Object"><desc>имя или описание (blockName,modName,modVal) искомого блока</desc></param></params><returns type="BEM"/></method><method name="findBlocksOn"><desc>Находит блоки на DOM-элементах текущего блока или его элементов</desc><params><param name="elem" type="String|jQuery" optional="yes"><desc>элемент блока</desc></param><param name="block" type="String|Object"><desc>имя или описание (blockName,modName,modVal) искомого блока</desc></param></params><returns type="BEM[]"/></method><method name="findBlockOn"><desc>Находит первый блок на DOM-элементах текущего блока или его элементов</desc><params><param name="elem" type="String|jQuery" optional="yes"><desc>элемент блока</desc></param><param name="block" type="String|Object"><desc>имя или описание (blockName,modName,modVal) искомого блока</desc></param></params><returns type="BEM"/></method><method name="doBlocksMethodInside"><desc>Выполняет метод блоков внутри (включая контекст) текущего блока или его элементов</desc><params><param name="elem" type="String|jQuery" optional="yes"><desc>элемент блока</desc></param><param name="block" type="String|Object"><desc>имя или описание (blockName,modName,modVal) искомого блока</desc></param><param name="method" type="String"><desc>имя метода</desc></param><param name="args" type="Array" optional="yes"><desc>параметры метода</desc></param></params><returns type="Array"><desc>результаты вызовов метода</desc></returns></method><method name="doBlocksMethodOutside"><desc>Выполняет метод блоков снаружи (включая контекст) текущего блока или его элементов</desc><params><param name="elem" type="String|jQuery" optional="yes"><desc>элемент блока</desc></param><param name="block" type="String|Object"><desc>имя или описание (blockName,modName,modVal) искомого блока</desc></param><param name="method" type="String"><desc>имя метода</desc></param><param name="args" type="Array" optional="yes"><desc>параметры метода</desc></param></params><returns type="Array"><desc>результаты вызовов метода</desc></returns></method><method name="doBlocksMethodOn"><desc>Выполняет метод блоков на DOM-элементах текущего блока или его элементов</desc><params><param name="elem" type="String|jQuery" optional="yes"><desc>элемент блока</desc></param><param name="block" type="String|Object"><desc>имя или описание (blockName,modName,modVal) искомого блока</desc></param><param name="method" type="String"><desc>имя метода</desc></param><param name="args" type="Array" optional="yes"><desc>параметры метода</desc></param></params><returns type="Array"><desc>результаты вызовов метода</desc></returns></method><method name="doBlocksMethod"><desc>Выполняет метод блоков</desc><params><param name="blocks" type="BEM[]"><desc>блоки</desc></param><param name="method" type="String"><desc>имя метода</desc></param><param name="args" type="Array" optional="yes"><desc>параметры метода</desc></param></params><returns type="Array"><desc>результаты вызовов метода</desc></returns></method><method name="bindToDomElem"><desc>Добавляет обработчик события произвольного DOM-элемента</desc><params><param name="domElem" type="jQuery"><desc>DOM-элемент, на котором будет слушаться событие</desc></param><param name="event" type="String|Object"><desc>имя события или объект события</desc></param><param name="fn" type="Function"><desc>функция-обработчик, будет выполнена в контексте блока</desc></param></params><returns type="BEM"/></method><method name="bindToDoc"><desc>Добавляет обработчик события на document</desc><params><param name="event" type="String"><desc>имя события</desc></param><param name="fn" type="Function"><desc>функция-обработчик, будет выполнена в контексте блока</desc></param></params><returns type="BEM"/></method><method name="bindToWin"><desc>Добавляет обработчик события на window</desc><params><param name="event" type="String"><desc>имя события</desc></param><param name="fn" type="Function"><desc>функция-обработчик, будет выполнена в контексте блока</desc></param></params><returns type="BEM"/></method><method name="bindTo"><desc>Добавляет обработчик события на основные DOM-элементы блока или его вложенные элементы</desc><params><param name="elem" type="jQuery|String" optional="yes"><desc>элемент</desc></param><param name="event" type="String"><desc>имя события</desc></param><param name="fn" type="Function"><desc>функция-обработчик, будет выполнена в контексте блока</desc></param></params><returns type="BEM"/></method><method name="unbindFromDomElem"><desc>Удаляет обработчики события произвольного DOM-элемента</desc><params><param name="domElem" type="jQuery"><desc>DOM-элемент, на котором будет слушаться событие</desc></param><param name="event" type="String"><desc>имя события</desc></param></params><returns type="BEM"/></method><method name="unbindFromDoc"><desc>Удаляет обработчик события у document</desc><params><param name="event" type="String"><desc>имя события</desc></param></params><returns type="BEM"/></method><method name="unbindFromWin"><desc>Удаляет обработчик события у document</desc><params><param name="event" type="String"><desc>имя события</desc></param></params><returns type="BEM"/></method><method name="unbindFrom"><desc>Удаляет обработчики события из основных DOM-элементы блока или его вложенных элементов</desc><params><param name="elem" type="jQuery|String" optional="yes"><desc>вложенный элемент</desc></param><param name="event" type="String"><desc>имя события</desc></param></params><returns type="BEM"/></method><method name="trigger"><desc>Запускает обработчики события у блока и обработчики live-событий</desc><params><param name="e" type="String"><desc>имя события</desc></param><param name="data" type="Object" optional="yes"><desc>дополнительные данные</desc></param></params><returns type="BEM"/></method><method name="setMod"><desc>Устанавливает модификатор у блока/вложенного элемента</desc><params><param name="elem" type="jQuery" optional="yes"><desc>вложенный элемент</desc></param><param name="modName" type="String"><desc>имя модификатора</desc></param><param name="modVal" type="String"><desc>значение модификатора</desc></param></params><returns type="BEM"/></method><method name="findElem"><desc>Находит вложенные в блок элементы</desc><params><param name="names" type="String"><desc>имя (или через пробел имена) вложенного элемента</desc></param><param name="modName" type="String" optional="yes"><desc>имя модификатора</desc></param><param name="modVal" type="String" optional="yes"><desc>значение модификатора</desc></param><param name="modVal"/></params><returns type="jQuery"><desc>DOM-элементы</desc></returns></method><method name="elem"><desc>Ленивый поиск вложенных в блок элементы (результат кэшируется)</desc><params><param name="names" type="String"><desc>имя (или через пробел имена) вложенных элементов</desc></param><param name="modName" type="String" optional="yes"><desc>имя модификатора</desc></param><param name="modVal" type="String" optional="yes"><desc>значение модификатора</desc></param></params><returns type="jQuery"><desc>DOM-элементы</desc></returns></method><method name="dropElemCache"><desc>Сброс кэша для элементов</desc><params><param name="names" type="String"><desc>имя (или через пробел имена) вложенных элементов</desc></param><param name="modName" type="String" optional="yes"><desc>имя модификатора</desc></param><param name="modVal" type="String" optional="yes"><desc>значение модификатора</desc></param></params><returns type="BEM"/></method><method name="containsDomElem"><desc>Проверяет, находится ли DOM-элемент в блоке</desc><params><param name="domElem" type="jQuery"><desc>DOM-элемент</desc></param></params><returns type="Boolean"/></method></methods></protected></members><static><public><properties><property name="extractParams" type="Object"><desc>Извлекает параметры блока из DOM-элемента</desc></property></properties><methods><method name="buildSelector"><desc>Строит CSS-селектор, соответствующий блоку/элементу и модификатору</desc><params><param name="elem" type="String" optional="yes"><desc>имя элемент</desc></param><param name="modName" type="String" optional="yes"><desc>имя модификатора</desc></param><param name="modVal" type="String" optional="yes"><desc>значение модификатора</desc></param></params><returns type="String"/></method><method name="getWindowSize"><desc>Возвращает размер текущего окна</desc><returns type="Object"><desc>объект с полями width, height</desc></returns></method></methods></public><protected><properties><property name="doc" type="jQuery"><desc>Шорткат для документа</desc></property><property name="win" type="jQuery"><desc>Шорткат для window</desc></property></properties><methods><method name="init"><desc>Инициализирует блоки на фрагменте DOM-дерева</desc><params><param name="ctx" type="jQuery" optional="yes" default="document"><desc>корневая DOM-нода</desc></param><param name="callback" type="Function" optional="yes"><desc>обработчик, вызываемый после инициализации</desc></param><param name="callbackCtx" type="Object" optional="yes"><desc>контекст обработчика</desc></param></params></method><method name="destruct"><desc>Уничтожает блоки на фрагменте DOM-дерева</desc><params><param name="keepDOM" type="Boolean" optional="yes" default="false"><desc>нужно ли оставлять DOM-ноды в документе</desc></param><param name="ctx" type="jQuery"><desc>корневая DOM-нода</desc></param><param name="excludeSelf" type="Boolean" optional="yes" default="false"><desc>не учитывать контекст</desc></param></params></method><method name="update"><desc>Заменяет фрагмент DOM-дерева внутри контекста, уничтожая старые блоки и инициализируя новые</desc><params><param name="ctx" type="jQuery"><desc>корневая DOM-нода</desc></param><param name="content" type="jQuery|String"><desc>новый контент</desc></param><param name="callback" type="Function" optional="yes"><desc>обработчик, вызываемый после инициализации</desc></param><param name="callbackCtx" type="Object" optional="yes"><desc>контекст обработчика</desc></param></params></method><method name="liveInitOnEvent"><desc>Хелпер для live-инициализации по событию на DOM-элементах блока или его элементов</desc><params><param name="elemName" type="String" optional="yes"><desc>имя элемента или элементов (через пробел)</desc></param><param name="event" type="String"><desc>имя события</desc></param><param name="callback" type="Function"><desc>обработчик, вызываемый после успешной инициализации</desc></param></params></method><method name="liveBindTo"><desc>Хелпер для подписки на live-события на DOM-элементах блока или его элементов</desc><params><param name="to" type="String|Object" optional="yes"><desc>описание (объект с modName, modVal, elemName) или имя элемента или элементов (через пробел)</desc></param><param name="event" type="String"><desc>имя события</desc></param><param name="callback" type="Function"><desc>обработчик</desc></param><param name="invokeOnInit"/></params></method><method name="liveUnbindFrom"><desc>Хелпер для отписки от live-событий на DOM-элементах блока или его элементов</desc><params><param name="elemName" type="String" optional="yes"><desc>имя элемента или элементов (через пробел)</desc></param><param name="event" type="String"><desc>имя события</desc></param><param name="callback" type="Function" optional="yes"><desc>обработчик</desc></param></params></method><method name="liveInitOnBlockInit"><desc>Хелпер для live-инициализации по инициализации другого блока на DOM-элементе текущего</desc><params><param name="blockName" type="String"><desc>имя блока, на инициализацию которого нужно реагировать</desc></param><param name="callback" type="Function"><desc>обработчик, вызываемый после успешной инициализации в контексте нового блока</desc></param></params></method><method name="liveInitOnBlockInsideInit"><desc>Хелпер для live-инициализации по инициализации другого блока внутри текущего</desc><params><param name="blockName" type="String"><desc>имя блока, на инициализацию которого нужно реагировать</desc></param><param name="callback" type="Function" optional="yes"><desc>обработчик, вызываемый после успешной инициализации в контексте нового блока</desc></param></params></method><method name="on"><desc>Добавляет обработчик live-события на блок, с учётом заданного элемента,
внутри которого будет слушаться событие</desc><params><param name="ctx" type="jQuery" optional="yes"><desc>элемент, внутри которого будет слушаться событие</desc></param><param name="e" type="String"><desc>имя события</desc></param><param name="data" type="Object" optional="yes"><desc>дополнительные данные, приходящие в обработчик как e.data</desc></param><param name="fn" type="Function"><desc>обработчик</desc></param><param name="fnCtx" type="Object" optional="yes"><desc>контекст обработчика</desc></param></params></method><method name="un"><desc>Удаляет обработчик live-события у блока, с учётом заданного элемента,
внутри которого слушалось событие</desc><params><param name="ctx" type="jQuery" optional="yes"><desc>элемент, внутри которого слушалось событие</desc></param><param name="e" type="String"><desc>имя события</desc></param><param name="fn" type="Function" optional="yes"><desc>обработчик</desc></param><param name="fnCtx" type="Object" optional="yes"><desc>контекст обработчика</desc></param></params></method><method name="liveCtxBind"><deprecated>использовать on</deprecated><desc>Добавляет обработчик live-события на блок, с учётом заданного элемента,
внутри которого будет слушаться событие</desc><params><param name="ctx" type="jQuery"><desc>элемент, внутри которого будет слушаться событие</desc></param><param name="e" type="String"><desc>имя события</desc></param><param name="data" type="Object" optional="yes"><desc>дополнительные данные, приходящие в обработчик как e.data</desc></param><param name="fn" type="Function"><desc>обработчик</desc></param><param name="fnCtx" type="Object" optional="yes"><desc>контекст обработчика</desc></param></params></method><method name="liveCtxUnbind"><deprecated>использовать un</deprecated><desc>Удаляет обработчик live-события у блока, с учётом заданного элемента,
внутри которого слушалось событие</desc><params><param name="ctx" type="jQuery"><desc>элемент, внутри которого слушалось событие</desc></param><param name="e" type="String"><desc>имя события</desc></param><param name="fn" type="Function" optional="yes"><desc>обработчик</desc></param><param name="fnCtx" type="Object" optional="yes"><desc>контекст обработчика</desc></param></params></method></methods></protected></static></class></jsdoc>