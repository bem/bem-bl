Блок ##i-jquery## помогает подключить ##jQuery## на страницу и упорядочивает хранение js-кода плагинов.

На уровне ##blocks-common## блок ##i-jquery## состоит из нескольких элементов, которые содержат плагины к ##jQuery##.
Декларация этих элементов обеспечивает подключение этих плагинов в страничный ##JS##.\\

На уровне ##blocks-desktop## есть дополнительный элемент ##core##.

Таким образом, для того, чтобы поддерживаемая версия ##jQuery## оказалась на страницах, нужно
использовать такой ##BEMJSON##:

%%hl js
({
    block: 'b-page',
    title: 'Страница про ссылку',
    head: [
        ...
        { block: 'i-jquery', elem: 'core' },
        ...
    ],
%%

Этот шаблон не продуцирует ##DOM##-представление элемента. Он декларирует использование на странице элемента ##js##,
блока ##b-page##, подключающего ##js## с ##jQuery##.

Если мы решим перейти на новую версию библиотеки, просто изменим этот шаблон. И тогда у всех
проектов, подключавших ##jQuery## не вручную, а через блок ##i-jquery##, своевременно изменится версия.

Можно перезаписать этот базовый шаблон ##BEMHTML## шаблоном на своём уровне переопределения
(для всего проекта или только для некоторых страниц). В этом случае, используя те же самые входные данные,
можно получать более подходящий проекту результат.

В директории элемента ##core## в виде кода модификаторов элемента размещены совместимые с библиотекой
версии ##jQuery## в минимизированном состоянии. При помощи переопределения ##BEMHTML## шаблона такими файлами
можно пользоваться для оффлайн-разработки:

%%hl js
block i-jquery, elem core, default: {
    local(
        this._mode = '',
        this.ctx = {
            block: 'b-page',
            elem: 'js',
            url: '/bem-bl/blocks-desktop/i-jquery/__core/_version/i-jquery__core_version_1.6.2.js'
        }
    ) this.apply()
}
%%
